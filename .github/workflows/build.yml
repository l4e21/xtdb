name: XTDB CI
run-name: XTDB CI

on: [push]

jobs:
  test:
    name: Test
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Setup Python 3.10
        uses: actions/setup-python@v4
        with:
          python-version: "3.10"
      - uses: Gr1N/setup-poetry@v8
        with:
          poetry-version: "1.8.1"
      - name: Test
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: test
      - name: Upload build reports
        if: success() || failure() # i.e. not cancelled
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/
      - name: Upload build reports (Core)
        if: success() || failure() # i.e. not cancelled
        uses: actions/upload-artifact@v3
        with:
          name: core-build-reports
          path: core/build/reports/
      - name: Post Slack Notification (On Fail)
        if: failure() && github.repository == 'xtdb/xtdb' && github.ref == 'refs/heads/main'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "*{workflow}* has {status_message}:"
          message_format: "{emoji} `test` job has {status_message} in *{workflow}*"
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  integration-test:
    name: Integration Test
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Integration Test
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: integration-test
      - name: Upload build reports
        if: success() || failure() # i.e. not cancelled
        uses: actions/upload-artifact@v3
        with:
          name: build-reports
          path: build/reports/
      - name: Post Slack Notification (On Fail)
        if: failure() && github.repository == 'xtdb/xtdb' && github.ref == 'refs/heads/main'
        uses: ravsamhq/notify-slack-action@v2
        with:
          status: ${{ job.status }}
          notification_title: "*{workflow}* has {status_message}:"
          message_format: "{emoji} `integration-test` job has {status_message} in *{workflow}*"
          notify_when: "failure"
        env:
          SLACK_WEBHOOK_URL: ${{ secrets.SLACK_WEBHOOK_URL }}

  slt-1:
    name: SLT 1
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: SLT 1
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: slt-test

  slt-2:
    name: SLT 2
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: SLT 2
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: slt-test-2

  deploy-standalone-docker:
    name: Deploy XTDB Standalone Docker Image
    runs-on: ubuntu-latest
    if: github.repository == 'xtdb/xtdb' && github.ref == 'refs/heads/docker-latest'
    permissions:
      contents: read
      packages: write
    needs:
      - test
      - integration-test
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build Uberjar
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: :docker:standalone:shadowJar
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push Standalone Docker image
        uses: docker/build-push-action@v5
        with:
          context: docker/standalone
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/xtdb/xtdb-standalone-ea:latest
          build-args: |
            GIT_SHA=${{ github.sha }}
            XTDB_VERSION="dev-SNAPSHOT"

  deploy-aws-docker:
    name: Deploy XTDB AWS Docker Image
    runs-on: ubuntu-latest
    if: github.repository == 'xtdb/xtdb' && github.ref == 'refs/heads/docker-latest'
    permissions:
      contents: read
      packages: write
    needs:
      - test
      - integration-test
    steps:
      - uses: actions/checkout@v3
      - name: Set up JDK 21
        uses: actions/setup-java@v3
        with:
          java-version: '21'
          distribution: 'temurin'
      - name: Build Uberjar
        uses: gradle/actions/setup-gradle@v3
        with:
          arguments: :docker:aws:shadowJar
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v3
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v3
      - name: Log in to the Container registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.repository_owner }}
          password: ${{ secrets.GITHUB_TOKEN }}
      - name: Build and push AWS Docker image
        uses: docker/build-push-action@v5
        with:
          context: docker/aws
          platforms: linux/arm/v7,linux/arm64/v8,linux/amd64
          push: ${{ github.event_name != 'pull_request' }}
          tags: ghcr.io/xtdb/xtdb-aws-ea:latest
          build-args: |
            GIT_SHA=${{ github.sha }}
            XTDB_VERSION="dev-SNAPSHOT"

